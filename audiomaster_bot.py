from telebot import types
from moviepy.editor import VideoFileClip
from jproperties import Properties

import telebot;
import video_downloader;
import os;
import random, string
import logging



logging.basicConfig(level=logging.INFO)

telegram_token = ""
video_download_directory = ""
audio_download_directory = ""

props = Properties()

def load_properties():
    global telegram_token , video_download_directory , audio_download_directory

    get_file_path = os.getcwd() 
    get_file_path+="/resource/app-conf.properties"

    with open(get_file_path, 'rb') as config_file:
        props.load(config_file)
    
    print(props.get("token").data)
    telegram_token = props.get("token").data
    video_download_directory = props.get("video.directory").data
    audio_download_directory = props.get("audio.directory").data
    logging.info("Properties Read Successful")



hello_text = """
*–ü—Ä–∏–≤–µ—Ç!* üëã –Ø - *–±–æ—Ç AudioMaster*. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–∑–≤–ª–µ—á—å –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∞ YouTube –∏ –¥—Ä—É–≥–∏—Ö –≤–∏–¥–µ–æ—Ö–æ—Å—Ç–∏–Ω–≥–∞—Ö. –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏ —Å–≤–æ–µ –≤–∏–¥–µ–æ –Ω–∞–ø—Ä—è–º—É—é, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ –∞—É–¥–∏–æ—Ñ–∞–π–ª. –ú–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–∏–¥–µ–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –¥–æ 40 –º–∏–Ω—É—Ç!

üîß *–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ:* AudioMaster –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ –∏–ª–∏ –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –±–æ—Ç–∞ –∏ —Ü–µ–Ω–∏–º —Ç–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ.

‚ö†Ô∏è *–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –∏–º–µ–µ—à—å –ø—Ä–∞–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä—Å–∫–∏–º–∏ –ø—Ä–∞–≤–∞–º–∏ –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤, –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω. AudioMaster –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–ø—Ä–∞–≤–æ–º–µ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤. –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –Ω–∞ —Ç–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫.

"""

load_properties()

bot = telebot.TeleBot(token=telegram_token , threaded=True)


@bot.message_handler(content_types=['text'] )
def get_text_messages(message):
        

        if message.text == "/start":

            logging.info("Input command /start")
      
            bot.send_message(chat_id=message.from_user.id , text=hello_text , reply_markup=main_reply_markup() , parse_mode="Markdown")
        elif message.text == "YouTube üî¥":
               logging.info("input commmand 'YouTube'")
               bot.send_message(message.from_user.id , "üé∂ –û—Ç–ª–∏—á–Ω–æ! —Ç—ã –≤—ã–±—Ä–∞–ª —Ñ—É–Ω–∫—Ü–∏—é YouTube. –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ –∞—É–¥–∏–æ—Ñ–æ—Ä–º–∞—Ç! üìπ‚û°Ô∏èüéß")  
               bot.register_next_step_handler(message , extract_from_youtube)
        elif message.text == "My Video ‚ñ∂Ô∏è" : 
               logging.info("input command 'My Video'")
               bot.send_message(message.from_user.id , "üöß –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üë∑‚Äç‚ôÇÔ∏èüîß")  
        elif message.text == "Other Hosting üîò":
            logging.info("input command 'Other Hosting'")
            bot.send_message(message.from_user.id , "üöß –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üë∑‚Äç‚ôÇÔ∏èüîß")  
        else :
           logging.info("input 'invalid command'")
           bot.send_message(message.from_user.id , "ü§î –ö–∞–∂–µ—Ç—Å—è, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –ø–æ–º–æ—â–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö. üìö")  

               
                             
                    





def extract_from_youtube(message):
        logging.info("Start extract video from youtube ... ")
        video_file_name = random_video_name()
        bot.send_message(message.from_user.id , "‚è≥ –í–∞—à–µ –≤–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, —Å–∫–æ—Ä–æ —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –∞—É–¥–∏–æ—Ñ–∞–π–ª! üé¨üîÑüéµ")
        link = message.text

        logging.info(f"Recive a link '{link}' , start dowload ... ")
        video_downloader.download(link , video_download_directory , video_file_name)

        logging.info("Video download successful. Extract audio ...")
        bot.send_message(message.from_user.id , "‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –°–µ–π—á–∞—Å —è –∏–∑–≤–ª–µ–∫–∞—é –∞—É–¥–∏–æ–¥–æ—Ä–æ–∂–∫—É –¥–ª—è –≤–∞—Å. –û—Å—Ç–∞–Ω–µ—Ç—Å—è —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ! üéûÔ∏èüé∂")
        audio_file = extract_audio_from_video(video_file_name + ".mp4")

        logging.info("Audio extract successful. Remove video ")
        os.remove(video_download_directory + "/" + video_file_name + ".mp4")
        
      
        try:
       
            bot.send_audio(message.from_user.id , audio_file , "üéâ –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ –≤—ã—Ä–µ–∑–∞–Ω–æ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ –∫ —ç—Ç–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é! –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ–º! üéßüì©" , reply_markup=main_reply_markup())
     
        except telebot.apihelper.ApiTelegramException as e:
             bot.send_message(message.from_user.id , "üö´ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. üé¨üìâ")


def extract_audio_from_video(file_name):
       logging.info("Extract audio start ... ")
       inputDir = video_download_directory + "/" + file_name
       outputDir = audio_download_directory + "/" + random_audio_name()

       video = VideoFileClip(inputDir)
       audio = video.audio
       audio.write_audiofile(outputDir)

       logging.info("Audio write successful. Sent to user")

       audioFile = open(outputDir, "rb")

       return audioFile


def main_reply_markup():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    youtube_key = types.KeyboardButton("YouTube üî¥")
    my_key = types.KeyboardButton("My Video ‚ñ∂Ô∏è")
    other_video_key = types.KeyboardButton("Other Hosting üîò")

    keyboard.row(youtube_key , my_key )
    keyboard.row(other_video_key)

    return keyboard



def random_video_name():
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(20))

def random_audio_name():
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(20)) + ".mp3"




     
    


bot.polling(none_stop=True, interval=0)        